<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Micser.App.Infrastructure.Themes">

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="Colors.Default.xaml" />-->

        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/BusyPanel.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/Connection.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/Connector.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/EditableSlider.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/EditableTextBlock.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/Expander.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/Icons.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/InfoButton.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/LinePanel.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/Menu.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/Slider.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/SettingsPanel.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/Thumbs.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/ToolBar.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/View.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/Widget.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/WidgetPanel.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/WidgetToolbox.xaml" />
        <ResourceDictionary Source="/Micser.App.Infrastructure;component/Themes/WidgetToolboxItem.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Window}" x:Key="DefaultWindowStyle">
        <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey DefaultBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {themes:BrushThemeKey DefaultForeground}}" />
    </Style>

    <Style TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey DefaultBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {themes:BrushThemeKey DefaultForeground}}" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="PopupBorder">
        <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey DefaultBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {themes:BrushThemeKey DefaultBorder}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" Opacity="0.8" ShadowDepth="5" Direction="-45" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Popup}">
        <Setter Property="AllowsTransparency" Value="True" />
    </Style>

    <Style TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey DefaultBorder}}" />
    </Style>

    <Style TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey DefaultBorder}}" />
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Control}}" />
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Control}}" />
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey TextBoxBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {themes:BrushThemeKey DefaultForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {themes:BrushThemeKey DefaultBorder}}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey StatusBarBackground}}" />
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey ButtonBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {themes:BrushThemeKey DefaultForeground}}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{DynamicResource {themes:BrushThemeKey ButtonBorder}}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Padding" Value="4,2,4,2" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey ButtonBackgroundHover}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey ButtonBackgroundPressed}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {themes:BrushThemeKey DefaultForegroundDisabled}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {themes:BrushThemeKey DefaultForegroundDisabled}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
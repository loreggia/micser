<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Micser.App.Infrastructure.Themes"
                    xmlns:controls="clr-namespace:Micser.App.Infrastructure.Controls"
                    xmlns:converter="clr-namespace:Micser.App.Infrastructure.Converter">

    <Style TargetType="{x:Type controls:InfoButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border" Width="20" Height="20" CornerRadius="10" BorderThickness="1" BorderBrush="{DynamicResource {themes:BrushThemeKey DefaultIconPrimary}}">
                        <Grid>
                            <ContentControl ContentTemplate="{DynamicResource Icon_InformationSymbol_16x}" HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand" />

                            <Popup x:Name="Popup" MaxWidth="200" IsOpen="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" StaysOpen="False" Placement="Relative"
                                       PlacementTarget="{Binding ElementName=Border}" VerticalOffset="{Binding ActualHeight, ElementName=Border}"
                                       HorizontalOffset="{Binding ActualWidth, ElementName=PopupBorder, Converter={converter:RelativeCenterPlacementConverter}}" AllowsTransparency="True">
                                <Border x:Name="PopupBorder" Background="{DynamicResource {themes:BrushThemeKey DefaultBackground}}" BorderBrush="{DynamicResource {themes:BrushThemeKey DefaultBorder}}"
                                            BorderThickness="1" Margin="5">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="5" Opacity="0.8" ShadowDepth="5" Direction="-45" RenderingBias="Quality" />
                                    </Border.Effect>

                                    <TextBlock Text="{TemplateBinding Content}" Foreground="{DynamicResource {themes:BrushThemeKey DefaultForeground}}" TextWrapping="Wrap" Margin="10" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Micser.App.Infrastructure.Themes"
                    xmlns:controls="clr-namespace:Micser.App.Infrastructure.Controls">

    <!-- Menu Style -->
    <Style TargetType="{x:Type Menu}" BasedOn="{StaticResource {x:Type Menu}}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey DefaultBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {themes:BrushThemeKey DefaultForeground}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MenuItem templates -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1,1,1,0" BorderBrush="Transparent" Margin="{TemplateBinding Margin}">
            <Grid x:Name="Grid">
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />

                <controls:CustomPopup x:Name="Popup"
                                      Placement="Bottom"
                                      PlacementTarget="{Binding ElementName=Border}"
                                      IsOpen="{TemplateBinding IsSubmenuOpen}"
                                      AllowsTransparency="True"
                                      Focusable="False"
                                      PopupAnimation="Fade"
                                      MinWidth="150">
                    <Grid Margin="5">
                        <Border x:Name="SubmenuBorder" Background="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundActive}}" BorderThickness="1" BorderBrush="Transparent">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8" ShadowDepth="5" Direction="-45" RenderingBias="Quality" />
                            </Border.Effect>

                            <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2" />
                            </ScrollViewer>
                        </Border>

                        <Border Margin="1,0,0,0" x:Name="TransitionBorder" Width="{Binding ActualWidth, ElementName=Grid}" Height="1"
                                VerticalAlignment="Top" HorizontalAlignment="Left"
                                Background="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundActive}}"
                                BorderThickness="1" BorderBrush="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundActive}}" />
                    </Grid>
                </controls:CustomPopup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundHover}}" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundActive}}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {themes:BrushThemeKey MenuItemPopupBorder}}" />
                <Setter TargetName="SubmenuBorder" Property="BorderBrush" Value="{DynamicResource {themes:BrushThemeKey MenuItemPopupBorder}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {themes:BrushThemeKey DefaultForegroundDisabled}}" />
            </Trigger>
            <Trigger SourceName="Popup" Property="IsOppositePlacement" Value="True">
                <Setter TargetName="Border" Property="BorderThickness" Value="1,0,1,1" />
                <Setter TargetName="SubmenuBorder" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" Opacity="0.8" ShadowDepth="5" Direction="45" RenderingBias="Quality" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="TransitionBorder" Property="VerticalAlignment" Value="Bottom" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Margin="{TemplateBinding Margin}">
            <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundHover}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundActive}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {themes:BrushThemeKey DefaultForegroundDisabled}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Margin="{TemplateBinding Margin}">
            <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundActive}}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundHover}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {themes:BrushThemeKey DefaultForegroundDisabled}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1" BorderBrush="Transparent" Margin="{TemplateBinding Margin}">
            <Grid x:Name="Grid">
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />

                <controls:CustomPopup x:Name="Popup"
                                      Placement="Right"
                                      PlacementTarget="{Binding ElementName=Border}"
                                      IsOpen="{TemplateBinding IsSubmenuOpen}"
                                      AllowsTransparency="True"
                                      Focusable="False"
                                      PopupAnimation="Fade"
                                      MinWidth="150">
                    <Grid Margin="5">
                        <Border x:Name="SubmenuBorder" Background="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundActive}}" BorderThickness="1" BorderBrush="Transparent">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8" ShadowDepth="5" Direction="-45" RenderingBias="Quality" />
                            </Border.Effect>

                            <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2" />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </controls:CustomPopup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundHover}}" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {themes:BrushThemeKey MenuItemBackgroundActive}}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {themes:BrushThemeKey MenuItemPopupBorder}}" />
                <Setter TargetName="SubmenuBorder" Property="BorderBrush" Value="{DynamicResource {themes:BrushThemeKey MenuItemPopupBorder}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {themes:BrushThemeKey DefaultForegroundDisabled}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {themes:BrushThemeKey DefaultBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {themes:BrushThemeKey DefaultForeground}}" />
        <Setter Property="Margin" Value="1" />

        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
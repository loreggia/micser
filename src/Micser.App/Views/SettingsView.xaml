<i:View x:Class="Micser.App.Views.SettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="clr-namespace:Micser.App.Infrastructure;assembly=Micser.App.Infrastructure"
        xmlns:vm="clr-namespace:Micser.App.ViewModels"
        xmlns:settings="clr-namespace:Micser.App.Infrastructure.Settings;assembly=Micser.App.Infrastructure"
        xmlns:behaviors="clr-namespace:Micser.App.Infrastructure.Behaviors;assembly=Micser.App.Infrastructure"
        xmlns:themes="clr-namespace:Micser.App.Infrastructure.Themes;assembly=Micser.App.Infrastructure"
        xmlns:converter="clr-namespace:Micser.App.Infrastructure.Converter;assembly=Micser.App.Infrastructure"
        mc:Ignorable="d"
        d:DesignHeight="500"
        d:DesignWidth="800"
        d:DataContext="{d:DesignInstance vm:SettingsViewModel}">

    <i:View.Resources>
        <Style x:Key="DescriptionButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Border" Width="20" Height="20" CornerRadius="10" BorderThickness="1" BorderBrush="{DynamicResource {themes:BrushThemeKey DefaultIconPrimary}}" Background="{DynamicResource {themes:BrushThemeKey DefaultIcon}}">
                            <Grid>
                                <ContentControl ContentTemplate="{DynamicResource Icon_InformationSymbol_16x}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                                <Popup IsOpen="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" StaysOpen="False" Placement="Relative" PlacementTarget="{Binding ElementName=Border}" VerticalOffset="{Binding ActualHeight, ElementName=Border}" HorizontalOffset="{Binding ActualWidth, ElementName=Border, Converter={converter:RelativeCenterPlacementConverter}}">
                                    <Border Background="{DynamicResource {themes:BrushThemeKey DefaultBackground}}" BorderBrush="{DynamicResource {themes:BrushThemeKey DefaultBorder}}" BorderThickness="1">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="5" Opacity="0.8" ShadowDepth="5" Direction="-45" RenderingBias="Quality" />
                                        </Border.Effect>

                                        <TextBlock Text="{TemplateBinding Content}" Foreground="{DynamicResource {themes:BrushThemeKey DefaultForeground}}" />
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <i:TypeTemplateSelector x:Key="TemplateSelector" />

        <DataTemplate x:Key="{x:Type vm:BooleanSettingViewModel}" DataType="{x:Type vm:BooleanSettingViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="Label" Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Definition.Name}" ToolTip="{Binding Definition.Description}" Target="{Binding ElementName=CheckBox}" behaviors:CheckBoxLabelBehavior.IsEnabled="True" />
                <CheckBox x:Name="CheckBox" Grid.Column="1" IsChecked="{Binding Value, Mode=TwoWay}" VerticalAlignment="Center" />
                <ToggleButton Grid.Column="2" Style="{StaticResource DescriptionButtonStyle}" Content="{Binding Definition.Description}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="{x:Type vm:IntegerSettingViewModel}" DataType="{x:Type vm:IntegerSettingViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="Label" Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Definition.Name}" ToolTip="{Binding Definition.Description}" Target="{Binding ElementName=TextBox}" />
                <TextBox x:Name="TextBox" Grid.Column="1" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" behaviors:TextBoxMaskBehavior.Mask="Integer" />
                <ToggleButton Grid.Column="2" Style="{StaticResource DescriptionButtonStyle}" Content="{Binding Definition.Description}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="{x:Type vm:DecimalSettingViewModel}" DataType="{x:Type vm:DecimalSettingViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="Label" Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Definition.Name}" ToolTip="{Binding Definition.Description}" Target="{Binding ElementName=TextBox}" />
                <TextBox x:Name="TextBox" Grid.Column="1" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" behaviors:TextBoxMaskBehavior.Mask="Decimal" />
                <ToggleButton Grid.Column="2" Style="{StaticResource DescriptionButtonStyle}" Content="{Binding Definition.Description}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="{x:Type vm:StringSettingViewModel}" DataType="{x:Type vm:StringSettingViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="Label" Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Definition.Name}" ToolTip="{Binding Definition.Description}" Target="{Binding ElementName=TextBox}" />
                <TextBox x:Name="TextBox" Grid.Column="1" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <ToggleButton Grid.Column="2" Style="{StaticResource DescriptionButtonStyle}" Content="{Binding Definition.Description}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="{x:Type vm:ListSettingViewModel}" DataType="{x:Type vm:ListSettingViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="Label" Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Definition.Name}" ToolTip="{Binding Definition.Description}" Target="{Binding ElementName=ComboBox}" />
                <ComboBox x:Name="ComboBox" Grid.Column="1" SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding List}" />
                <ToggleButton Grid.Column="2" Style="{StaticResource DescriptionButtonStyle}" Content="{Binding Definition.Description}" />
            </Grid>
        </DataTemplate>
    </i:View.Resources>

    <settings:SettingsPanel ItemsSource="{Binding Settings}" ItemTemplateSelector="{StaticResource TemplateSelector}" Grid.IsSharedSizeScope="True" />
</i:View>
{"version":3,"file":"index.es.js","sources":["../src/components/Loader/Loader.tsx","../src/Contexts.ts","../src/utils/utils.ts","../src/components/Widgets/VolumeControls.tsx","../src/components/Widgets/Widget.tsx","../src/services/Api.ts","../src/hooks/useApi.ts","../src/hooks/useGetApi.ts","../src/hooks/useCollapseState.ts","../src/i18n/index.ts"],"sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 999;\r\n`;\r\n\r\nexport interface LoaderProps {\r\n    isVisible?: boolean;\r\n    tip?: string;\r\n    suspenseTime?: number;\r\n}\r\n\r\nexport const Loader: FC<LoaderProps> = ({ isVisible, tip, suspenseTime }) => {\r\n    const [isVisibleInternal, setIsVisibleInternal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let timeout: number;\r\n\r\n        if (isVisible) {\r\n            const handler: TimerHandler = () => {\r\n                setIsVisibleInternal(true);\r\n            };\r\n            timeout = setTimeout(handler, suspenseTime);\r\n        } else {\r\n            clearTimeout(timeout);\r\n            setIsVisibleInternal(false);\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [isVisible]);\r\n\r\n    return isVisibleInternal ? (\r\n        <Container>\r\n            <Spin tip={tip} />\r\n        </Container>\r\n    ) : null;\r\n};\r\n\r\nLoader.defaultProps = {\r\n    isVisible: true,\r\n    tip: \"Loading...\",\r\n    suspenseTime: 1000,\r\n};\r\n","import { createContext } from \"react\";\r\nimport { StateChangedHandler, Widget } from \"./models\";\r\n\r\nexport interface DashboardContext {\r\n    onStateChanged: StateChangedHandler;\r\n}\r\n\r\nexport type WidgetTypesContext = Widget[];\r\n\r\nexport const Contexts = {\r\n    widgetTypes: createContext<WidgetTypesContext>([]),\r\n    dashboard: createContext<DashboardContext>({\r\n        onStateChanged: () => {},\r\n    }),\r\n};\r\n","export const parseBool = (value?: string) => {\r\n    return value && value.toLowerCase() === \"true\";\r\n};\r\n","import React, { FC, useContext, useEffect, useState } from \"react\";\r\nimport { Checkbox, Col, InputNumber, Row, Slider } from \"antd\";\r\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { Module } from \"models\";\r\nimport { Contexts } from \"Contexts\";\r\nimport { parseBool } from \"utils\";\r\n\r\nexport interface VolumeControlsProps {\r\n    module: Module;\r\n}\r\n\r\nexport const VolumeControls: FC<VolumeControlsProps> = ({ module }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const dashboardContext = useContext(Contexts.dashboard);\r\n\r\n    const [volume, setVolume] = useState(100);\r\n    const [isMuted, setIsMuted] = useState(false);\r\n    const [useSystemVolume, setUseSystemVolume] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const parsed = parseFloat(module.state.volume);\r\n        if (!isNaN(parsed)) {\r\n            setVolume(parsed * 100);\r\n        }\r\n    }, [module.state.volume]);\r\n\r\n    useEffect(() => {\r\n        const parsed = parseBool(module.state.isMuted);\r\n        setIsMuted(parsed);\r\n    }, [module.state.isMuted]);\r\n\r\n    useEffect(() => {\r\n        const parsed = parseBool(module.state.useSystemVolume);\r\n        setUseSystemVolume(parsed);\r\n    }, [module.state.useSystemVolume]);\r\n\r\n    const handleVolumeChange = (value: number, skipSaving?: boolean) => {\r\n        setVolume(value);\r\n        if (!skipSaving) {\r\n            dashboardContext?.onStateChanged(module, { volume: (value / 100).toString() });\r\n        }\r\n    };\r\n\r\n    const handleIsMutedChange = (e: CheckboxChangeEvent) => {\r\n        const value = e.target.checked;\r\n        setIsMuted(value);\r\n        dashboardContext?.onStateChanged(module, { isMuted: value.toString() });\r\n    };\r\n\r\n    const handleUseSystemVolumeChange = (e: CheckboxChangeEvent) => {\r\n        const value = e.target.checked;\r\n        setUseSystemVolume(e.target.checked);\r\n        dashboardContext?.onStateChanged(module, { useSystemVolume: value.toString() });\r\n    };\r\n\r\n    const stopPropagationHandler = (e: React.SyntheticEvent) => {\r\n        // stop event propagation to enable correct slider inside the draggable widget\r\n        e.stopPropagation();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>{t(\"widgets.volumeControls.volume\")}</Col>\r\n                <Col span={16} onMouseDown={stopPropagationHandler} onTouchStart={stopPropagationHandler}>\r\n                    <Slider\r\n                        min={0}\r\n                        max={100}\r\n                        value={volume}\r\n                        onChange={(value: number) => handleVolumeChange(value, true)}\r\n                        onAfterChange={handleVolumeChange}\r\n                        tipFormatter={(value) => `${value}%`}\r\n                        step={1}\r\n                    />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <InputNumber\r\n                        min={0}\r\n                        max={100}\r\n                        value={volume}\r\n                        onChange={handleVolumeChange}\r\n                        step={1}\r\n                        style={{ float: \"right\" }}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Checkbox checked={isMuted} onChange={handleIsMutedChange}>\r\n                        {t(\"widgets.volumeControls.isMuted\")}\r\n                    </Checkbox>\r\n                    <Checkbox checked={useSystemVolume} onChange={handleUseSystemVolumeChange}>\r\n                        {t(\"widgets.volumeControls.useSystemVolume\")}\r\n                    </Checkbox>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n","import { Collapse } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const WidgetPanel = styled(Collapse.Panel)``;\r\n","import AxiosStatic, { AxiosError, AxiosInstance, AxiosResponse } from \"axios\";\r\nimport { trimStart } from \"lodash\";\r\n\r\nexport interface ApiOptions {\r\n    onError?: (e: any) => void;\r\n    autoLoad?: boolean;\r\n}\r\n\r\nexport interface IApi<TData> {\r\n    get: (action: string, param?: {}) => Promise<IApiResultData<TData>>;\r\n    getList: (action: string, param?: {}) => Promise<IApiResultData<TData[]>>;\r\n    post: (action: string, data: {}) => Promise<IApiResultData<TData>>;\r\n    put: (action: string | number, data: {}) => Promise<IApiResultData<TData>>;\r\n    delete: (action: string | number, data?: {}) => Promise<IApiResultData<TData>>;\r\n}\r\n\r\nexport type ErrorHandler = (error: IProblem) => void;\r\n\r\nexport type RequestAction = () => void;\r\n\r\nexport interface IProblem {\r\n    type: string;\r\n    status: number;\r\n    title?: string;\r\n    detail?: string;\r\n    instance?: string;\r\n    traceId?: string;\r\n    errors?: any;\r\n}\r\n\r\nexport interface IApiResult {\r\n    isSuccess: boolean;\r\n    problem?: IProblem;\r\n}\r\n\r\nexport interface IApiResultData<T> extends IApiResult {\r\n    data?: T;\r\n}\r\n\r\nexport class Api<TData> implements IApi<TData> {\r\n    private _axios: AxiosInstance;\r\n    private _onError: ErrorHandler;\r\n    private _onBeginRequest: RequestAction;\r\n    private _onEndRequest: RequestAction;\r\n\r\n    constructor(baseUrl: string, onBeginRequest: RequestAction, onEndRequest: RequestAction, onError: ErrorHandler) {\r\n        this._axios = AxiosStatic.create({\r\n            withCredentials: true,\r\n            baseURL: \"/api/\" + trimStart(baseUrl, \"/\"),\r\n        });\r\n        this._onBeginRequest = onBeginRequest;\r\n        this._onEndRequest = onEndRequest;\r\n        this._onError = onError;\r\n    }\r\n\r\n    async get(action: string = \"\", params?: {}): Promise<IApiResultData<TData>> {\r\n        return this.execute(() => this._axios.get<TData>(action, { params }));\r\n    }\r\n\r\n    async getList(action: string = \"\", params?: {}): Promise<IApiResultData<TData[]>> {\r\n        return this.execute<TData[]>(() => this._axios.get<TData[]>(action, { params }));\r\n    }\r\n\r\n    async post(action: string = \"\", data: {}): Promise<IApiResultData<TData>> {\r\n        return this.execute(() => this._axios.post<TData>(action, data));\r\n    }\r\n\r\n    async put(action: string | number, data: {}): Promise<IApiResultData<TData>> {\r\n        return this.execute(() => this._axios.put<TData>(`${action}`, data));\r\n    }\r\n\r\n    async delete(action: string | number, params?: {}): Promise<IApiResultData<TData>> {\r\n        return this.execute(() => this._axios.delete<TData>(`${action}`, { params }));\r\n    }\r\n\r\n    private async execute<TData>(func: () => Promise<AxiosResponse<TData>>): Promise<IApiResultData<TData>> {\r\n        try {\r\n            this._onBeginRequest();\r\n            const result = await func();\r\n            return this.getResult<TData>(result);\r\n        } catch (error) {\r\n            return this.handleError<TData>(error);\r\n        } finally {\r\n            this._onEndRequest();\r\n        }\r\n    }\r\n\r\n    private getResult<TData>(axiosResult: AxiosResponse<TData>): IApiResultData<TData> {\r\n        const isSuccess = axiosResult.status >= 200 && axiosResult.status < 400;\r\n        return {\r\n            isSuccess,\r\n            problem: isSuccess ? undefined : ((axiosResult.data as unknown) as IProblem),\r\n            data: isSuccess ? axiosResult.data : undefined,\r\n        };\r\n    }\r\n\r\n    private handleError<TData>(error: AxiosError): IApiResultData<TData> {\r\n        console.log(error);\r\n        const problem: IProblem =\r\n            error.response && error.response.data\r\n                ? (error.response.data as IProblem)\r\n                : {\r\n                      type: \"Internal\",\r\n                      status: 500,\r\n                      title: \"Unknown error.\",\r\n                  };\r\n        this._onError(problem);\r\n        return {\r\n            isSuccess: false,\r\n            problem,\r\n        };\r\n    }\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Api, IApi, IProblem } from \"services\";\r\n\r\nexport function useApi<R>(path: string): [IApi<R>, { isLoading: boolean; error?: IProblem }] {\r\n    const [api, setApi] = useState<IApi<R>>();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState<IProblem>();\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n        const onError = (error: IProblem) => {\r\n            if (!canceled) {\r\n                setError(error);\r\n            }\r\n        };\r\n\r\n        const onRequestAction = (isLoading: boolean) => {\r\n            if (!canceled) {\r\n                setIsLoading(isLoading);\r\n            }\r\n        };\r\n\r\n        const api = new Api<R>(\r\n            path,\r\n            () => onRequestAction(true),\r\n            () => onRequestAction(false),\r\n            onError\r\n        );\r\n\r\n        setApi(api);\r\n\r\n        return () => {\r\n            canceled = true;\r\n        };\r\n    }, []);\r\n\r\n    return [api, { isLoading, error }];\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { IProblem } from \"services\";\r\nimport { useApi } from \"./useApi\";\r\n\r\nexport type ApiOptions = {\r\n    onError?: (e: any) => void;\r\n    autoLoad?: boolean;\r\n};\r\n\r\nexport const useGetApi = <R, P = any>(\r\n    path: string,\r\n    action?: Nullable<string>,\r\n    params?: P\r\n): [Nullable<R>, { refresh: () => void; isLoading: boolean; error?: IProblem }] => {\r\n    const [api, { isLoading, error }] = useApi<R>(path);\r\n\r\n    const [result, setResult] = useState<Nullable<R>>(null);\r\n    const [refreshIndex, setRefreshIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const loadData = async () => {\r\n            if (api) {\r\n                const result = await api.get(action || \"\", params);\r\n\r\n                if (!canceled && result.isSuccess) {\r\n                    setResult(result.data || null);\r\n                }\r\n            }\r\n        };\r\n\r\n        loadData();\r\n\r\n        return () => {\r\n            canceled = true;\r\n        };\r\n    }, [api, params, refreshIndex]);\r\n\r\n    const refresh = useCallback(() => {\r\n        setRefreshIndex((i) => i + 1);\r\n    }, []);\r\n\r\n    return [result, { refresh, isLoading, error }];\r\n};\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { Contexts } from \"Contexts\";\r\nimport { Module } from \"models\";\r\n\r\ntype CollapseKeys = string | string[];\r\n\r\nexport const useCollapseState = (\r\n    module: Module,\r\n    defaultActiveKeys?: CollapseKeys\r\n): [CollapseKeys, (keys: CollapseKeys) => void] => {\r\n    const dashboardContext = useContext(Contexts.dashboard);\r\n\r\n    const [activeKeys, setActiveKeys] = useState<CollapseKeys>(defaultActiveKeys || []);\r\n\r\n    useEffect(() => {\r\n        if (module.state.activeCollapseKeys) {\r\n            try {\r\n                const stateKeys = JSON.parse(module.state.activeCollapseKeys);\r\n                setActiveKeys(stateKeys);\r\n            } catch {\r\n                // ignored\r\n            }\r\n        }\r\n    }, [module.state.activeCollapseKeys]);\r\n\r\n    const handleChange = useCallback(\r\n        (keys: CollapseKeys) => {\r\n            setActiveKeys(keys);\r\n            const value = JSON.stringify(keys);\r\n            dashboardContext.onStateChanged(module, { activeCollapseKeys: value });\r\n        },\r\n        [module, dashboardContext.onStateChanged]\r\n    );\r\n\r\n    return [activeKeys, handleChange];\r\n};\r\n","import defaultEn from \"./en/default.json\";\r\n\r\nexport const resources = {\r\n    en: {\r\n        default: defaultEn,\r\n    },\r\n};\r\n"],"names":[],"mappings":"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"}
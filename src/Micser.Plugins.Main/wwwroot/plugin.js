!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react"),require("react-i18next"),require("antd"),require("micser-common")):"function"==typeof define&&define.amd?define("micser-plugins-main",["react","react-i18next","antd","micser-common"],t):"object"==typeof exports?exports["micser-plugins-main"]=t(require("react"),require("react-i18next"),require("antd"),require("micser-common")):e["micser-plugins-main"]=t(e.react,e["react-i18next"],e.antd,e["micser-common"])}(self,(function(e,t,n,r){return(()=>{"use strict";var o={724:(e,t,n)=>{n.r(t),n.d(t,{default:()=>p});var r,o=n(297),i=n.n(o),u=n(789),c=n(953),a=n(440),d=c.Select.Option;!function(e){e.input="Input",e.output="Output"}(r||(r={}));var s=function(e){var t=e.module,n=e.type,r=(0,u.useTranslation)().t,s=(0,a.useGetApi)("Devices/"+n),p=s[0],l=s[1].isLoading,m=(0,a.useCollapseState)(t,["common-controls","device"]),v=m[0],f=m[1],g=(0,o.useContext)(a.Contexts.dashboard);return i().createElement(i().Fragment,null,i().createElement(a.Loader,{isVisible:l}),i().createElement(c.Collapse,{activeKey:v,onChange:f},i().createElement(a.WidgetPanel,{key:"common-controls",header:r("widgets.commonControls.title")},i().createElement(a.CommonControls,{module:t})),i().createElement(a.WidgetPanel,{key:"device",header:r("common.device")},i().createElement(c.Select,{dropdownMatchSelectWidth:!1,value:t.state.deviceId,onChange:function(e){g.onStateChanged(t,{deviceId:null==e?void 0:e.toString()})},style:{width:"100%"}},p&&p.map((function(e){return i().createElement(d,{key:e.id,value:e.id},e.friendlyName)}))))))};const p={name:"Main",widgets:[{name:"DeviceInput",titleResource:"deviceInputWidget.title",descriptionResource:"deviceInputWidget.description",content:function(e){var t=e.module;return i().createElement(s,{module:t,type:r.input})},outputHandles:["Output01"]},{name:"DeviceOutput",titleResource:"deviceOutputWidget.title",descriptionResource:"deviceOutputWidget.description",content:function(e){var t=e.module;return i().createElement(s,{module:t,type:r.output})},inputHandles:["Input01"]}],resources:{en:JSON.parse('{"common":{"device":"Device"},"deviceInputWidget":{"title":"Device Input","description":"Captures the audio from an input device (i.e. microphone)."},"deviceOutputWidget":{"title":"Device Output","description":"Sends audio to an output device (i.e. speakers, headphones)."}}')}}},953:e=>{e.exports=n},440:e=>{e.exports=r},297:t=>{t.exports=e},789:e=>{e.exports=t}},i={};function u(e){if(i[e])return i[e].exports;var t=i[e]={exports:{}};return o[e](t,t.exports,u),t.exports}return u.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return u.d(t,{a:t}),t},u.d=(e,t)=>{for(var n in t)u.o(t,n)&&!u.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},u.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),u.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},u(724)})()}));
//# sourceMappingURL=plugin.js.map